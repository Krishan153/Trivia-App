{"ast":null,"code":"var _jsxFileName = \"/Users/krishanroy/Desktop/Tandem/src/App.js\";\nimport React, { useState } from 'react';\nexport default function App() {\n  const questions = [{\n    questionText: 'What was Tandem previous name?',\n    answerOptions: [{\n      answerText: 'Tandem',\n      isCorrect: false\n    }, {\n      answerText: 'Burger Shack',\n      isCorrect: false\n    }, {\n      answerText: 'Extraordinary Humans',\n      isCorrect: false\n    }, {\n      answerText: 'Devmynd',\n      isCorrect: true\n    }]\n  }, {\n    questionText: \"In Shakespeare's play Julius Caesar, Caesar's last words were...\",\n    answerOptions: [{\n      answerText: 'Iacta alea est!',\n      isCorrect: false\n    }, {\n      answerText: 'Et tu, Brute?',\n      isCorrect: true\n    }, {\n      answerText: 'Vidi, vini, vici',\n      isCorrect: false\n    }, {\n      answerText: 'Aegri somnia vana',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'A group of tigers are referred to as:',\n    answerOptions: [{\n      answerText: 'Ambush',\n      isCorrect: true\n    }, {\n      answerText: 'Chowder',\n      isCorrect: false\n    }, {\n      answerText: 'Pride',\n      isCorrect: false\n    }, {\n      answerText: 'Destruction',\n      isCorrect: false\n    }]\n  }, {\n    questionText: 'What is the top speed an average cat can travel?',\n    answerOptions: [{\n      answerText: '42mph',\n      isCorrect: false\n    }, {\n      answerText: '13mph',\n      isCorrect: false\n    }, {\n      answerText: '9mph',\n      isCorrect: false\n    }, {\n      answerText: '31mph',\n      isCorrect: true\n    }]\n  }, {\n    questionText: 'A cat can jump to _____ times its own height:',\n    answerOptions: [{\n      answerText: '3',\n      isCorrect: false\n    }, {\n      answerText: '9',\n      isCorrect: false\n    }, {\n      answerText: '7',\n      isCorrect: false\n    }, {\n      answerText: '5',\n      isCorrect: true\n    }]\n  }, {\n    questionText: \"What is the only letter that doesn't appear in a US state name?\",\n    answerOptions: [{\n      answerText: 'M',\n      isCorrect: false\n    }, {\n      answerText: 'Z',\n      isCorrect: false\n    }, {\n      answerText: 'Q',\n      isCorrect: true\n    }, {\n      answerText: 'X',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"What is the name for a cow-bison hybrid?\",\n    answerOptions: [{\n      answerText: 'Cowson',\n      isCorrect: false\n    }, {\n      answerText: 'Beefalo',\n      isCorrect: true\n    }, {\n      answerText: 'Bicow',\n      isCorrect: false\n    }, {\n      answerText: 'Mooson',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"What is the largest freshwater lake in the world?\",\n    answerOptions: [{\n      answerText: 'Lake Superior',\n      isCorrect: true\n    }, {\n      answerText: 'Lake Baikal',\n      isCorrect: false\n    }, {\n      answerText: 'Lake Michigan',\n      isCorrect: false\n    }, {\n      answerText: 'Lake Victoria',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"In a website address bar, what does WWW stand for?\",\n    answerOptions: [{\n      answerText: 'Wild Wild West',\n      isCorrect: false\n    }, {\n      answerText: 'War World Web',\n      isCorrect: false\n    }, {\n      answerText: 'World Wide Web',\n      isCorrect: true\n    }]\n  }, {\n    questionText: \"In a game of bingo, what number is represented by the name two little ducks?\",\n    answerOptions: [{\n      answerText: '20',\n      isCorrect: false\n    }, {\n      answerText: '22',\n      isCorrect: true\n    }, {\n      answerText: '55',\n      isCorrect: false\n    }, {\n      answerText: '70',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"According to Greek mythology, who was the first woman on Earth?\",\n    answerOptions: [{\n      answerText: 'Lilith',\n      isCorrect: false\n    }, {\n      answerText: 'Eve',\n      isCorrect: false\n    }, {\n      answerText: 'Pandora',\n      isCorrect: true\n    }, {\n      answerText: 'Hera',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"In which European city would you find Orly airport?\",\n    answerOptions: [{\n      answerText: 'London',\n      isCorrect: false\n    }, {\n      answerText: 'Belgium',\n      isCorrect: false\n    }, {\n      answerText: 'Munich',\n      isCorrect: false\n    }, {\n      answerText: 'Paris',\n      isCorrect: true\n    }]\n  }, {\n    questionText: \"Where would you find the Sea of Tranquility?\",\n    answerOptions: [{\n      answerText: 'The Moon',\n      isCorrect: true\n    }, {\n      answerText: 'California',\n      isCorrect: false\n    }, {\n      answerText: 'Siberia',\n      isCorrect: false\n    }, {\n      answerText: 'China',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"Which artist painted 'Girl with a Pearl Earrin'?\",\n    answerOptions: [{\n      answerText: 'Van Gogh',\n      isCorrect: false\n    }, {\n      answerText: 'Picasso',\n      isCorrect: false\n    }, {\n      answerText: 'Vermeer',\n      isCorrect: true\n    }, {\n      answerText: 'Da Vinci',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"What is the official name for the 'hashtag' symbol?\",\n    answerOptions: [{\n      answerText: 'Number Sign',\n      isCorrect: false\n    }, {\n      answerText: 'Hash Sign',\n      isCorrect: false\n    }, {\n      answerText: 'Octothorpe',\n      isCorrect: true\n    }, {\n      answerText: 'Pound',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"Not American at all, where is apple pie from?\",\n    answerOptions: [{\n      answerText: 'Japan',\n      isCorrect: false\n    }, {\n      answerText: 'England',\n      isCorrect: true\n    }, {\n      answerText: 'Etheopia',\n      isCorrect: false\n    }, {\n      answerText: 'Canada',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"What is the national animal of Scotland?\",\n    answerOptions: [{\n      answerText: 'Bear',\n      isCorrect: false\n    }, {\n      answerText: 'Rabbit',\n      isCorrect: false\n    }, {\n      answerText: 'Seal',\n      isCorrect: false\n    }, {\n      answerText: 'Unicorn',\n      isCorrect: true\n    }]\n  }, {\n    questionText: \"Where in the world is the only place where Canada is *due south*\",\n    answerOptions: [{\n      answerText: 'Detroit',\n      isCorrect: true\n    }, {\n      answerText: 'Alaska',\n      isCorrect: false\n    }, {\n      answerText: 'Russia',\n      isCorrect: false\n    }, {\n      answerText: 'Washington',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"Approximately how many grapes go into a bottle of wine?\",\n    answerOptions: [{\n      answerText: '200',\n      isCorrect: false\n    }, {\n      answerText: '500',\n      isCorrect: false\n    }, {\n      answerText: '700',\n      isCorrect: true\n    }, {\n      answerText: '1000',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"How much does a US One Dollar Bill cost to make?\",\n    answerOptions: [{\n      answerText: '$0.05',\n      isCorrect: true\n    }, {\n      answerText: '$0.25',\n      isCorrect: false\n    }, {\n      answerText: '$1.00',\n      isCorrect: false\n    }, {\n      answerText: '$5.00',\n      isCorrect: false\n    }]\n  }, {\n    questionText: \"The Vatican bank has the only ATM in the world that allows users to do what?\",\n    answerOptions: [{\n      answerText: 'Receive withdrawls in rosary beads',\n      isCorrect: false\n    }, {\n      answerText: 'Vote for the Pope',\n      isCorrect: false\n    }, {\n      answerText: 'Purchase indulgences',\n      isCorrect: false\n    }, {\n      answerText: 'Perform transactions in Latin',\n      isCorrect: true\n    }]\n  }]; //To select 10 random numbers, and put them into an array\n\n  const randomArray = (length, max) => [...new Array(length)].map(() => Math.round(Math.random() * max)); //To dynamically change the question being returned\n\n\n  const [displayQuestion, setDisplayQuestion] = useState(0); //To show the score, and to dynamically change the showScore in the return function\n\n  const [showScore, rollingQuestions] = useState(false);\n  const [score, setScore] = useState(0); //To go to the next question\n\n  const afterAnswer = isCorrect => {\n    if (isCorrect === true) {\n      setScore(score + 1);\n    } //Pick only 10 questions\n\n\n    const nextQuestion = displayQuestion + 1;\n\n    if (nextQuestion < 10) {\n      setDisplayQuestion(nextQuestion);\n    } else {\n      //Help bring us to the results page\n      rollingQuestions(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 3\n    }\n  }, showScore ?\n  /*#__PURE__*/\n  //If showScore is true, display the result screen\n  React.createElement(\"div\", {\n    className: \"score-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 5\n    }\n  }, \"You scored \", score, \" out of \", 10) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 4\n    }\n  }, \"Question \", displayQuestion + 1), \"/\", 10), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"question-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }, questions[displayQuestion].questionText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answer-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 6\n    }\n  }, questions[displayQuestion].answerOptions.map(answerOptions =>\n  /*#__PURE__*/\n  //By passing the booleon from the answerOptions, we can now keep track of if the answer is correct after the user clicks their choice\n  React.createElement(\"button\", {\n    onClick: () => afterAnswer(answerOptions.isCorrect),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 8\n    }\n  }, answerOptions.answerText)))));\n}","map":{"version":3,"sources":["/Users/krishanroy/Desktop/Tandem/src/App.js"],"names":["React","useState","App","questions","questionText","answerOptions","answerText","isCorrect","randomArray","length","max","Array","map","Math","round","random","displayQuestion","setDisplayQuestion","showScore","rollingQuestions","score","setScore","afterAnswer","nextQuestion"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nexport default function App() {\n\tconst questions = [\n\t\t{\n\t\t\tquestionText: 'What was Tandem previous name?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Tandem', isCorrect: false },\n\t\t\t\t{ answerText: 'Burger Shack', isCorrect: false },\n\t\t\t\t{ answerText: 'Extraordinary Humans', isCorrect: false },\n\t\t\t\t{ answerText: 'Devmynd', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"In Shakespeare's play Julius Caesar, Caesar's last words were...\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Iacta alea est!', isCorrect: false },\n\t\t\t\t{ answerText: 'Et tu, Brute?', isCorrect: true },\n\t\t\t\t{ answerText: 'Vidi, vini, vici', isCorrect: false },\n\t\t\t\t{ answerText: 'Aegri somnia vana', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'A group of tigers are referred to as:',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Ambush', isCorrect: true },\n\t\t\t\t{ answerText: 'Chowder', isCorrect: false },\n\t\t\t\t{ answerText: 'Pride', isCorrect: false },\n\t\t\t\t{ answerText: 'Destruction', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'What is the top speed an average cat can travel?',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '42mph', isCorrect: false },\n\t\t\t\t{ answerText: '13mph', isCorrect: false },\n\t\t\t\t{ answerText: '9mph', isCorrect: false },\n\t\t\t\t{ answerText: '31mph', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: 'A cat can jump to _____ times its own height:',\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '3', isCorrect: false },\n\t\t\t\t{ answerText: '9', isCorrect: false },\n\t\t\t\t{ answerText: '7', isCorrect: false },\n\t\t\t\t{ answerText: '5', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"What is the only letter that doesn't appear in a US state name?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'M', isCorrect: false },\n\t\t\t\t{ answerText: 'Z', isCorrect: false },\n\t\t\t\t{ answerText: 'Q', isCorrect: true },\n\t\t\t\t{ answerText: 'X', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"What is the name for a cow-bison hybrid?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Cowson', isCorrect: false },\n\t\t\t\t{ answerText: 'Beefalo', isCorrect: true },\n\t\t\t\t{ answerText: 'Bicow', isCorrect: false },\n\t\t\t\t{ answerText: 'Mooson', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"What is the largest freshwater lake in the world?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Lake Superior', isCorrect: true },\n\t\t\t\t{ answerText: 'Lake Baikal', isCorrect: false },\n\t\t\t\t{ answerText: 'Lake Michigan', isCorrect: false },\n\t\t\t\t{ answerText: 'Lake Victoria', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"In a website address bar, what does WWW stand for?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Wild Wild West', isCorrect: false },\n\t\t\t\t{ answerText: 'War World Web', isCorrect: false },\n\t\t\t\t{ answerText: 'World Wide Web', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"In a game of bingo, what number is represented by the name two little ducks?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '20', isCorrect: false },\n\t\t\t\t{ answerText: '22', isCorrect: true },\n\t\t\t\t{ answerText: '55', isCorrect: false },\n\t\t\t\t{ answerText: '70', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"According to Greek mythology, who was the first woman on Earth?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Lilith', isCorrect: false },\n\t\t\t\t{ answerText: 'Eve', isCorrect: false },\n\t\t\t\t{ answerText: 'Pandora', isCorrect: true },\n\t\t\t\t{ answerText: 'Hera', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"In which European city would you find Orly airport?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'London', isCorrect: false },\n\t\t\t\t{ answerText: 'Belgium', isCorrect: false },\n\t\t\t\t{ answerText: 'Munich', isCorrect: false },\n\t\t\t\t{ answerText: 'Paris', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"Where would you find the Sea of Tranquility?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'The Moon', isCorrect: true },\n\t\t\t\t{ answerText: 'California', isCorrect: false },\n\t\t\t\t{ answerText: 'Siberia', isCorrect: false },\n\t\t\t\t{ answerText: 'China', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"Which artist painted 'Girl with a Pearl Earrin'?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Van Gogh', isCorrect: false },\n\t\t\t\t{ answerText: 'Picasso', isCorrect: false },\n\t\t\t\t{ answerText: 'Vermeer', isCorrect: true },\n\t\t\t\t{ answerText: 'Da Vinci', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"What is the official name for the 'hashtag' symbol?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Number Sign', isCorrect: false },\n\t\t\t\t{ answerText: 'Hash Sign', isCorrect: false },\n\t\t\t\t{ answerText: 'Octothorpe', isCorrect: true },\n\t\t\t\t{ answerText: 'Pound', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"Not American at all, where is apple pie from?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Japan', isCorrect: false },\n\t\t\t\t{ answerText: 'England', isCorrect: true },\n\t\t\t\t{ answerText: 'Etheopia', isCorrect: false },\n\t\t\t\t{ answerText: 'Canada', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"What is the national animal of Scotland?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Bear', isCorrect: false },\n\t\t\t\t{ answerText: 'Rabbit', isCorrect: false },\n\t\t\t\t{ answerText: 'Seal', isCorrect: false },\n\t\t\t\t{ answerText: 'Unicorn', isCorrect: true },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"Where in the world is the only place where Canada is *due south*\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Detroit', isCorrect: true },\n\t\t\t\t{ answerText: 'Alaska', isCorrect: false },\n\t\t\t\t{ answerText: 'Russia', isCorrect: false },\n\t\t\t\t{ answerText: 'Washington', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"Approximately how many grapes go into a bottle of wine?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '200', isCorrect: false },\n\t\t\t\t{ answerText: '500', isCorrect: false },\n\t\t\t\t{ answerText: '700', isCorrect: true },\n\t\t\t\t{ answerText: '1000', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"How much does a US One Dollar Bill cost to make?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: '$0.05', isCorrect: true },\n\t\t\t\t{ answerText: '$0.25', isCorrect: false },\n\t\t\t\t{ answerText: '$1.00', isCorrect: false },\n\t\t\t\t{ answerText: '$5.00', isCorrect: false },\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tquestionText: \"The Vatican bank has the only ATM in the world that allows users to do what?\",\n\t\t\tanswerOptions: [\n\t\t\t\t{ answerText: 'Receive withdrawls in rosary beads', isCorrect: false },\n\t\t\t\t{ answerText: 'Vote for the Pope', isCorrect: false },\n\t\t\t\t{ answerText: 'Purchase indulgences', isCorrect: false },\n\t\t\t\t{ answerText: 'Perform transactions in Latin', isCorrect: true },\n\t\t\t],\n\t\t},\n\t];\n\n\t//To select 10 random numbers, and put them into an array\n\tconst randomArray = (length, max) => [...new Array(length)].map(() => Math.round(Math.random() * max));\n\n\t//To dynamically change the question being returned\n\tconst [displayQuestion, setDisplayQuestion] = useState(0);\n\n\t//To show the score, and to dynamically change the showScore in the return function\n\tconst [showScore, rollingQuestions] = useState(false);\n\n\tconst [score, setScore] = useState(0);\n\n\t//To go to the next question\n\tconst afterAnswer = (isCorrect) => {\n\t\tif(isCorrect === true){\n\t\t\tsetScore(score + 1);\n\t\t}\n\n\t\t//Pick only 10 questions\n\t\tconst nextQuestion = displayQuestion + 1;\n\t\tif(nextQuestion < 10){\n\t\t\tsetDisplayQuestion(nextQuestion);\n\t\t} else {\n\t\t\t//Help bring us to the results page\n\t\t\trollingQuestions(true);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='app'>\n\t\t\t{showScore ? (\n\t\t\t\t//If showScore is true, display the result screen\n\t\t\t\t<div className='score-section'>You scored {score} out of {10}</div>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<div className='question-section'>\n\t\t\t\t\t\t<div className='question-count'>\n\t\t\t<span>Question {displayQuestion + 1}</span>/{10}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='question-text'>{questions[displayQuestion].questionText}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='answer-section'>\n\t\t\t\t\t\t{questions[displayQuestion].answerOptions.map((answerOptions) => (\n\t\t\t\t\t\t\t//By passing the booleon from the answerOptions, we can now keep track of if the answer is correct after the user clicks their choice\n\t\t\t\t\t\t\t<button onClick={() => afterAnswer(answerOptions.isCorrect)}>{answerOptions.answerText}</button>))} \n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}